diff --git a/public/index.html b/public/index.html
index 47f4be6..6517e81 100644
--- a/public/index.html
+++ b/public/index.html
@@ -16,20 +16,6 @@
     <link rel="prefetch" href="openscad-worker.js">
     <link rel="prefetch" href="libraries/fonts.zip">
 
-    <link rel="prefetch" href="libraries/MCAD.zip">
-    <link rel="prefetch" href="libraries/BOSL2.zip">
-    <link rel="prefetch" href="libraries/BOSL.zip">
-    <link rel="prefetch" href="libraries/NopSCADlib.zip">
-    <link rel="prefetch" href="libraries/FunctionalOpenSCAD.zip">
-    <link rel="prefetch" href="libraries/funcutils.zip">
-    <link rel="prefetch" href="libraries/smooth-prim.zip">
-    <link rel="prefetch" href="libraries/closepoints.zip">
-    <link rel="prefetch" href="libraries/plot-function.zip">
-    <link rel="prefetch" href="libraries/YAPP_Box.zip">
-    <link rel="prefetch" href="libraries/Stemfie_OpenSCAD.zip">
-    <link rel="prefetch" href="libraries/UB.scad.zip">
-    <link rel="prefetch" href="libraries/openscad-tray.zip">
-
     <!-- <script type="module" src="https://ajax.googleapis.com/ajax/libs/model-viewer/3.5.0/model-viewer.min.js" defer></script> -->
     <script type="module" src="./model-viewer.min.js" defer></script>
     
@@ -127,9 +113,9 @@
     </audio>
     <a target="_blank" class="github-fork-ribbon"
        href="https://github.com/openscad/openscad-playground"
-       data-ribbon="Fork me on GitHub"
-       title="Fork me on GitHub">
-       Fork me on GitHub
+       data-ribbon="OpenSCAD-playground"
+       title="OpenSCAD-playground">
+       OpenSCAD-playground
     </a>
 
     <noscript>You need to enable JavaScript to run the OpenSCAD Playground.</noscript>
diff --git a/src/components/HelpMenu.tsx b/src/components/HelpMenu.tsx
index eb9600d..ea1d620 100644
--- a/src/components/HelpMenu.tsx
+++ b/src/components/HelpMenu.tsx
@@ -10,6 +10,12 @@ export default function HelpMenu({className, style}: {className?: string, style?
   return (
     <>
       <Menu style={style} className={className}  model={[
+        {
+          label: "Box source code",
+          icon: 'pi pi-github',
+          url: 'https://github.com/ayowel/openscad-framework-usb-box/',
+          target: '_blank'
+        },
         {
           label: "openscad-playground",
           icon: 'pi pi-github',
@@ -17,7 +23,7 @@ export default function HelpMenu({className, style}: {className?: string, style?
           target: '_blank'
         },
         {
-          label: 'LICENSES',
+          label: 'Playground LICENSES',
           icon: 'pi pi-info-circle',
           url: 'https://github.com/openscad/openscad-playground/blob/main/LICENSE.md',
           target: '_blank'
@@ -56,4 +62,4 @@ export default function HelpMenu({className, style}: {className?: string, style?
         onClick={(e) => menuRef.current && menuRef.current.toggle(e)} />
     </>
   );
-}
\ No newline at end of file
+}
diff --git a/src/fs/zip-archives.ts b/src/fs/zip-archives.ts
index 51df5c9..35626a5 100644
--- a/src/fs/zip-archives.ts
+++ b/src/fs/zip-archives.ts
@@ -22,205 +22,6 @@ export type ZipArchives = {
 
 export const zipArchives: ZipArchives = {
   'fonts': {},
-  'openscad': {
-    description: 'OpenSCAD',
-    gitOrigin: {
-      branch: 'master',
-      repoUrl: 'https://github.com/openscad/openscad',
-      include: [{glob: ['examples/*.scad', 'LICENSE']}],
-    },
-    docs: {
-      'CheatSheet': 'https://openscad.org/cheatsheet/index.html',
-      'Documentation': 'https://openscad.org/documentation.html',
-    },
-  },
-  'MCAD': {
-    description: 'OpenSCAD Parametric CAD Library',
-    gitOrigin: {
-      branch: 'master',
-      repoUrl: 'https://github.com/openscad/MCAD',
-      include: [{glob: ['*.scad', 'bitmap/*.scad', 'LICENSE']}],
-    },
-  },
-  'BOSL': {
-    description: 'The Belfry OpenScad Library',
-    gitOrigin: {
-      branch: 'master',
-      repoUrl: 'https://github.com/revarbat/BOSL',
-      include: [{glob: ['**/*.scad', 'LICENSE']}],
-    },
-  },
-  'BOSL2': {
-    description: 'The Belfry OpenScad Library, v2.0',
-    gitOrigin: {
-      branch: 'master',
-      repoUrl: 'https://github.com/BelfrySCAD/BOSL2',
-      include: [{glob: ['**/*.scad', 'LICENSE']}],
-    },
-    docs: {
-      'CheatSheet': 'https://github.com/BelfrySCAD/BOSL2/wiki/CheatSheet',
-      'Wiki': 'https://github.com/BelfrySCAD/BOSL2/wiki',
-    },
-  },
-  'NopSCADlib': {
-    gitOrigin: {
-      branch: 'master',
-      repoUrl: 'https://github.com/nophead/NopSCADlib',
-      include: [{
-        glob: '**/*.scad',
-        ignore: 'test/**',
-      }],
-    },
-  },
-  'boltsparts': {
-    description: 'OpenSCAD library for generating bolt/nut models',
-    gitOrigin: {
-      branch: 'main',
-      repoUrl: 'https://github.com/boltsparts/boltsparts',
-      include: [{
-        glob: 'openscad/**/*.scad',
-        ignore: 'test/**',
-      }],
-    },
-    docs: {
-      'Usage': 'https://boltsparts.github.io/en/docs/0.3/document/openscad/usage.html',
-    },
-  },
-  'brailleSCAD': {
-    gitOrigin: {
-      branch: 'main',
-      repoUrl: 'https://github.com/BelfrySCAD/brailleSCAD',
-      include: [{
-        glob: ['**/*.scad', 'LICENSE'],
-        ignore: 'test/**',
-      }],
-    },
-    docs: {
-      'Documentation': 'https://github.com/BelfrySCAD/brailleSCAD/wiki/TOC',
-    },
-  },
-  'FunctionalOpenSCAD': {
-    description: 'Implementing OpenSCAD in OpenSCAD',
-    gitOrigin: {
-      branch: 'master',
-      repoUrl: 'https://github.com/thehans/FunctionalOpenSCAD',
-      include: [{glob: ['**/*.scad', 'LICENSE']}],
-    },
-  },
-  'OpenSCAD-Snippet': {
-    description: 'OpenSCAD Snippet Library',
-    gitOrigin: {
-      branch: 'main',
-      repoUrl: 'https://github.com/AngeloNicoli/OpenSCAD-Snippet',
-      include: [{glob: ['**/*.scad', 'LICENSE']}],
-    },
-    symlinks: {
-      'Asset_SCAD': 'Asset_SCAD',
-      'Import_Library.scad': 'Import_Library.scad',
-    },
-  },
-  'funcutils': {
-    description: 'OpenSCAD collection of functional programming utilities, making use of function-literals.',
-    gitOrigin: {
-      branch: 'master',
-      repoUrl: 'https://github.com/thehans/funcutils',
-      include: [{glob: '**/*.scad'}],
-    },
-  },
-  'smooth-prim': {
-    description: 'OpenSCAD smooth primitives library',
-    gitOrigin: {
-      branch: 'master',
-      repoUrl: 'https://github.com/rcolyer/smooth-prim',
-      include: [{glob: ['**/*.scad', 'LICENSE.txt']}],
-    },
-    symlinks: {'smooth_prim.scad': 'smooth_prim.scad'},
-  },
-  'closepoints': {
-    description: 'OpenSCAD ClosePoints Library',
-    gitOrigin: {
-      branch: 'master',
-      repoUrl: 'https://github.com/rcolyer/closepoints',
-      include: [{glob: ['**/*.scad', 'LICENSE.txt']}],
-    },
-    symlinks: {'closepoints.scad': 'closepoints.scad'},
-  },
-  'plot-function': {
-    description: 'OpenSCAD Function Plotting Library',
-    gitOrigin: {
-      branch: 'master',
-      repoUrl: 'https://github.com/colyer/plot-function',
-      include: [{glob: ['**/*.scad', 'LICENSE.txt']}],
-    },
-    symlinks: {'plot_function.scad': 'plot_function.scad'},
-  },
-  // 'threads': {
-  //   deployed: false,
-  //   gitOrigin: {
-  //     branch: 'master',
-  //     repoUrl: 'https://github.com/colyer/threads',
-  //     include: [{glob: ['**/*.scad', 'LICENSE.txt']}],
-  //   },
-  // },
-  'openscad-tray': {
-    description: 'OpenSCAD library to create rounded rectangular trays with optional subdividers.',
-    gitOrigin: {
-      branch: 'main',
-      repoUrl: 'https://github.com/sofian/openscad-tray',
-      include: [{glob: ['**/*.scad', 'LICENSE']}],
-    },
-    symlinks: {'tray.scad': 'tray.scad'},
-  },
-  'lasercut': {
-    description: 'Module for OpenSCAD, allowing 3D models to be created from 2D lasercut parts.',
-    gitOrigin: {
-      branch: 'master',
-      repoUrl: 'https://github.com/bmsleight/lasercut',
-      include: [{glob: ['**/*.scad', 'LICENSE']}],
-    },
-    symlinks: {'lasercut.scad': 'lasercut.scad'},
-  },    
-  'YAPP_Box': {
-    description: 'Yet Another Parametric Projectbox Box',
-    gitOrigin: {
-      branch: 'main',
-      repoUrl: 'https://github.com/mrWheel/YAPP_Box',
-      include: [{glob: ['**/*.scad', 'LICENSE']}],
-    },
-  },
-  'Stemfie_OpenSCAD': {
-    description: 'OpenSCAD Stemfie Library',
-    gitOrigin: {
-      branch: 'main',
-      repoUrl: 'https://github.com/Cantareus/Stemfie_OpenSCAD',
-      include: [{glob: ['**/*.scad', 'LICENSE']}],
-    },
-  },
-  'UB.scad': {
-    gitOrigin: {
-      branch: 'main',
-      repoUrl: 'https://github.com/UBaer21/UB.scad',
-      include: [{glob: ['libraries/*.scad', 'LICENSE', 'examples/UBexamples/*.scad'], replacePrefix: {
-        'libraries/': '',
-        'examples/UBexamples/': 'examples/',
-      }}],
-    },
-    symlinks: {"ub.scad": "libraries/ub.scad"}, // TODO change this after the replaces work
-  },
-  'pathbuilder': {
-    gitOrigin: {
-      branch: 'main',
-      repoUrl: 'https://github.com/dinther/pathbuilder.git',
-      include: [{glob: ['**/*.scad', 'LICENSE']}],
-    },
-  },
-  'openscad_attachable_text3d': {
-    gitOrigin: {
-      branch: 'main',
-      repoUrl: 'https://github.com/jon-gilbert/openscad_attachable_text3d.git',
-      include: [{glob: ['**/*.scad', 'LICENSE']}],
-    },
-  },
 };
 
 export const deployedArchiveNames =
diff --git a/src/state/initial-state.ts b/src/state/initial-state.ts
index 0d5538e..4fcb0f5 100644
--- a/src/state/initial-state.ts
+++ b/src/state/initial-state.ts
@@ -3,7 +3,7 @@
 import defaultScad from './default-scad.ts';
 import { State } from './app-state.ts';
 
-export const defaultSourcePath = '/playground.scad';
+export const defaultSourcePath = '/box.scad';
 export const defaultModelColor = '#f9d72c';
 const defaultBlurhash = "|KSPX^%3~qtjMx$lR*x]t7n,R%xuxbM{WBt7ayfk_3bY9FnAt8XOxanjNF%fxbMyIn%3t7NFoLaeoeV[WBo{xar^IoS1xbxcR*S0xbofRjV[j[kCNGofxaWBNHW-xasDR*WTkBxuWBM{s:t7bYahRjfkozWUadofbIW:jZ";
   
@@ -42,9 +42,9 @@ export function createInitialState(state: State | null, source?: {content?: stri
       view: {
         layout: {
           mode: 'multi',
-          editor: true,
+          editor: false,
           viewer: true,
-          customizer: false,
+          customizer: true,
         } as any,
 
         color: defaultModelColor,
@@ -57,9 +57,9 @@ export function createInitialState(state: State | null, source?: {content?: stri
     if (mode === 'multi' && initialState.view.layout.mode === 'single') {
       initialState.view.layout = {
         mode,
-        editor: true,
+        editor: false,
         viewer: true,
-        customizer: initialState.view.layout.focus == 'customizer'
+        customizer: true,
       }
     } else if (mode === 'single' && initialState.view.layout.mode === 'multi') {
       initialState.view.layout = {
